Os exercícios 2, 3 e 4 dizem para supor métodos da classe abstrata SearchableContainer.
Por se tratar de uma classe abstrata, os métodos não podem ser implementados.
Devido a isso, a idéia dos métodos foi implementada em pseudocódigo.

//Container version - exercicio 02
virtual bool SearchableContainer::IsMember (Object const& obj) const
{
	if Find(obj) != NullObject
		return true
	return false
}

virtual Object& SearchableContainer::Find (Object const& obj) const
{
	found = NullObject
	for each object in Container
		if obj == ContainerObject
			found = CointainerObject
			break
	return found
}

//Iterator version - exercicio 03
virtual bool SearchableContainer::IsMember (Object const& obj) const
{
	if Find(obj) != NullObject
		return true
	return false
}

virtual Object& SearchableContainer::Find (Object const& obj) const
{
	found = NullObject
	Iterator& i = NewIterator ()
	while (!i.IsDone ()) {
	    if i == obj 
	    	found = i
    	++i
	}
	delete &i;	
	return found
}

//Exercicio 04
virtual void SearchableContainer::TransferToAnotherContainer(Visitor visitor, Container container)
{
	Accept(visitor);
	while (!visitor.IsDone())
	{
		container.Insert(visitor.getContainerObject())
	}
	Purge();
}
